@startuml
class MySQLManager {
    - connection: mysql.connector.connection
    - cursor: mysql.connector.cursor
    + __init__(host, user, password, database)
    + create_tables()
    + add_product(name, category, price)
    + add_purchase(product_id, date)
    + get_products()
    + get_product_info(product_id)
    + get_all_purchases()
    + get_purchases_by_date(date)
    + get_purchases_by_category(category)
    + sort_purchases_by_price(ascending=True)
    + delete_purchase(purchase_id)
    + get_categories()
    + close()
}

class Product {
    - id: int
    - name: str
    - category: str
    - price: float
    + __init__(name, category, price)
}

class Purchase {
    - id: int
    - product_id: int
    - date: str
    + __init__(product_id, date)
}

class GUI {
    - mysql_manager: MySQLManager
    - window: tkinter.Tk
    - sort_order: str
    + __init__(mysql_manager)
    + add_purchase()
    + add_product()
    + get_product_id_by_name(product_name)
    + load_purchases()
    + display_purchases(purchases=None)
    + load_products()
    + view_by_date()
    + view_by_category()
    + sort_by_price()
    + delete_purchase()
    + run()
}

Product "1" -- "*" Purchase : Contains
MySQLManager --> Product : Manages
MySQLManager --> Purchase : Manages
GUI --> MySQLManager : Uses
GUI --> tkinter.Tk : Uses
GUI "1" --> "1" MySQLManager : Has
@enduml
